import React, { useState, useEffect } from 'react';
import * as XLSX from 'xlsx';
import Axios from "axios";
import { Form, Button, Table } from 'react-bootstrap';

function App() {
  // const [excelFile, setExcelFile] = useState(null);
  // const [excelFileError, setExcelFileError] = useState(null);
  // const [excelData, setExcelData] = useState(null);








  const readExcel = (file) => {
    const promise = new Promise((resolve, reject) => {
      const fileReader = new FileReader();
      fileReader.readAsArrayBuffer(file);

      fileReader.onload = (e) => {
        const bufferArray = e.target.result;

        const wb = XLSX.read(bufferArray, { type: "buffer" });

        const wsname = wb.SheetNames[0];

        const ws = wb.Sheets[wsname];

        const data = XLSX.utils.sheet_to_json(ws);

        // resolve(data);
        console.log(data)
        var d=data

        var arr = [];
        for (let index = 0; index < d.length; index++) {
                 const n = d[index]["ADMISSION_NUMBER","Student_Name","Father_Name","Mother_name","Date_of_Birth","Mobile_No"];
                 arr.push(n);
          }
          // console.log(arr)

      };

      fileReader.onerror = (error) => {
        reject(error);
      };

      
    });
    promise.then((d) => {


  
      // var arr = [];
      // for (let index = 0; index < d.length; index++) {
      //          const n = d[index]["ADMISSION_NUMBER"];
      //          arr.push(n);
      //   }
      //   console.log(arr)

    //     function padTo2Digits(num) {
    //       return num.toString().padStart(2, '0');
    //     }
    //     function formatDate(date) {
    //       return (
    //         [
    //           padTo2Digits(date.getDate()),
    //           padTo2Digits(date.getMonth() + 1),
    //           date.getFullYear(),
    //         ].join('-') +
    //         ' ' +
    //         [
    //           padTo2Digits(date.getHours()),
    //           padTo2Digits(date.getMinutes()),
    //         ].join(':')
    //       );
    //     }
        
    //     const uplodeDate=(formatDate(new Date()));

        
    //     const results = arr.filter(element => {
    //       return element !== undefined;
    //     });
        
    //     arr =results;
  
    //     console.log(arr);

    //   console.log("Done convert");


    //   Axios.post("http://localhost:8001/api/v1/data/post", {
    //     rcNumber: arr,
    //     docName: file.name,
    //     docDate: uplodeDate

    //   })
    //   .then((response) => {
    //     // console.log(response);
    //     alert("Successfully Uploded");
    //     window.location.reload()
      
    //   })
    //   .catch((error) => {
    //     alert("Not a valid infromation, Please check and try again.");
    //     console.log(error);
       
    //   });

    });
  };



  // const handleFile = (e) => {

    
  //   let selectedFile = e.target.files[0];
  //   if (selectedFile) {
  //     let reader = new FileReader();
  //     reader.readAsArrayBuffer(selectedFile);
  //     reader.onload = (e) => {
  //       setExcelFileError(null);
  //       setExcelFile(e.target.result);
  //       console.log("HERE"+e.target.result)
  //     };
  //   } else {
  //     console.log('Please select your file');
  //   }
  // };

  // const handleSubmit = (e) => {
  //   e.preventDefault();
  //   if (excelFile !== null) {
  //     const workbook = XLSX.read(excelFile, { type: 'buffer' });
  //     const worksheetName = workbook.SheetNames[0];
  //     const worksheet = workbook.Sheets[worksheetName];
  //     const data = XLSX.utils.sheet_to_json(worksheet);
  //     setExcelData(data);
    

  //     const currentDate = new Date();
  //     const formattedDate = currentDate.toISOString();

  //     Axios.post('http://192.168.43.112:8001/post', {
  //       docName: excelFile.name,
  //       docDate: formattedDate,
  //     })
  //       .then((response) => {
  //         console.log(response);
  //         alert('Data stored in the database successfully!');
  //       })
  //       .catch((error) => {
  //         console.log(error);
  //         alert('Failed to store data in the database.');
  //       });
  //   } else {
  //     setExcelData(null);
  //   }
  // };

  // const handleRead = () => {
  //   Axios.get('http://192.168.43.112:8001/read')
  //     .then((response) => {
  //       console.log(response);
  //       setExcelData(response.data);
  //     })
  //     .catch((error) => {
  //       console.log(error);
  //       alert('Failed to fetch data from the database.');
  //     });
  // };

  // const handleDelete = () => {
  //   Axios.delete('http://192.168.43.112:8001/delete')
  //     .then((response) => {
  //       console.log(response);
  //       setExcelData(null);
  //       alert('Data deleted from the database successfully!');
  //     })
  //     .catch((error) => {
  //       console.log(error);
  //       alert('Failed to delete data from the database.');
  //     });
  // };

  useEffect(() => {
    // handleRead();
  }, []);

  return (
    <div className="container">
      {/* <div className="form">
        <Form autoComplete="off" onSubmit={handleSubmit}>
          <Form.Group controlId="formFile">
            <Form.Label>Upload Excel file</Form.Label>
            <Form.Control type="file" onChange={handleFile} required />
          </Form.Group>
          {excelFileError && (
            <div className="text-danger" style={{ marginTop: '5px' }}>
              {excelFileError}
            </div>
          )}
          <Button variant="success" type="submit" style={{ marginTop: '5px' }}>
            Submit
          </Button>
        </Form>
      </div> */}

      <br />
      <hr />


      <Form>

<Form.Group controlId="formFile" className="mb-3">
    <Form.Label>Add document</Form.Label>
    <Form.Control 
    
    type="file" 
    accept=".xls,.xlsx,.csv" 
    onChange={(e) => {
      const file = e.target.files[0];
      readExcel(file);
    }}
    />
  </Form.Group>
  </Form>

{/* 
      <h5>View Excel file</h5>
      <div className="viewer">
        {excelData === null && <>No file selected</>}
        {excelData !== null && (
          <>
            <Table responsive>
              <thead>
                <tr>
                  <th>ADMISSION NUMBER</th>
                  <th>Student Name</th>
                  <th>Father Name</th>
                  <th>Mother Name</th>
                  <th>Date of Birth</th>
                  <th>Mobile No</th>
                </tr>
              </thead>
              <tbody>
                {excelData.map((row, index) => (
                  <tr key={index}>
                    <td>{row['ADMISSION NUMBER']}</td>
                    <td>{row['Student Name']}</td>
                    <td>{row['Father Name']}</td>
                    <td>{row['Mother Name']}</td>
                    <td>{row['Date of Birth']}</td>
                    <td>{row['Mobile No']}</td>
                  </tr>
                ))}
              </tbody>
            </Table>

            <Button variant="primary" onClick={handleRead}>
              Refresh Data
            </Button>    
            <Button variant="danger" onClick={handleDelete}>
              Delete Data
            </Button>
          </>
        )}
      </div> */}
    </div>
  );
}

export default App;







import React, { useState, useEffect } from 'react';
import * as XLSX from 'xlsx';
import Axios from "axios";
import { Form, Button, Table } from 'react-bootstrap';

function App() {
  const readExcel = (file) => {
    const promise = new Promise((resolve, reject) => {
      const fileReader = new FileReader();
      fileReader.readAsArrayBuffer(file);

      fileReader.onload = (e) => {
        const bufferArray = e.target.result;

        const wb = XLSX.read(bufferArray, { type: "buffer" });

        const wsname = wb.SheetNames[0];

        const ws = wb.Sheets[wsname];

        const data = XLSX.utils.sheet_to_json(ws);
        resolve(data);

        console.log(data)

      };
      fileReader.onerror = (error) => {
        reject(error);
      };

    });
        var arr = [];
        for (let index = 0; index < data.length; index++) {
          const { ADMISSION_NUMBER, Student_Name, Father_Name, Mother_name, Date_of_Birth, Mobile_No } = data[index];
          arr.push({ ADMISSION_NUMBER, Student_Name, Father_Name, Mother_name, Date_of_Birth, Mobile_No });
        }
        console.log("HERE"+arr)

        Axios.post('http://192.168.137.1:8001/post', data)
        .then(response => {
          console.log('Data sent successfully');
          // Handle the response
        })
        .catch(error => {
          console.error('Error sending data:', error);
          // Handle the error
        });
      };

      fileReader.onerror = (error) => {
        reject(error);
      };
    });

    promise.then((d) => {
      // Handle the data if needed
    });
  };

  useEffect(() => {
    // handleRead();
  }, []);

  return (
    <div className="container">
      <br />
      <hr />
      <Form>
        <Form.Group controlId="formFile" className="mb-3">
          <Form.Label>Add document</Form.Label>
          <Form.Control
            type="file"
            accept=".xls,.xlsx,.csv"
            onChange={(e) => {
              const file = e.target.files[0];
              readExcel(file);
            }}
          />
        </Form.Group>
      </Form>
    </div>
  );
}

export default App;
